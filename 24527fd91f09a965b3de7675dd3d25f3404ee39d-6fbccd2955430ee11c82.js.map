{"version":3,"file":"24527fd91f09a965b3de7675dd3d25f3404ee39d-6fbccd2955430ee11c82.js","mappings":"iMAyDA,MA5CqBA,IAWP,IAXQ,WACpBC,EAAU,KACVC,EAAI,QACJC,EACAC,WACEC,iBAAiB,gBAAEC,IACpB,MACDC,EAAK,KACLC,EAAI,WACJC,EAAU,WACVC,GACM,EACN,MAAMC,EAAc,MAClBC,EAAAA,EAAAA,IAASJ,EAAK,EAGhB,OACEK,EAAAA,EAAAA,MAACC,EAAS,YACRD,EAAAA,EAAAA,MAACE,EAAiB,YAChBC,EAAAA,EAAAA,KAACC,EAAmB,UACjBhB,EACEiB,QAAOC,IAAaV,GAA0B,aAAbU,IACjCC,KAAID,IACHH,EAAAA,EAAAA,KAACK,EAAAA,EAAgB,CAAgBF,SAAUA,EAAS,SACjDA,GADoBA,QAK7BH,EAAAA,EAAAA,KAACM,EAAc,WACbN,EAAAA,EAAAA,KAACO,EAAK,CAACC,QAASb,EAAY,SAAEJ,OAEhCS,EAAAA,EAAAA,KAACS,EAAW,UAAEtB,KACdU,EAAAA,EAAAA,MAACa,EAA+B,YAC9BV,EAAAA,EAAAA,KAACW,EAAS,UAAEzB,KACZW,EAAAA,EAAAA,MAACe,EAAU,WAAElB,EAAW,sBAG5BM,EAAAA,EAAAA,KAACa,EAAkB,CAACL,QAASb,EAAY,UACvCK,EAAAA,EAAAA,KAACc,EAAS,CAACC,MAAOzB,EAAiB0B,IAAI,uBAE/B,EAMhB,MAAMlB,GAAS,kKAUTC,GAAiB,oIAOjBE,GAAmB,sCAEnBK,GAAc,qCAEdC,GAAK,6HASLE,GAAW,sCAEXI,GAAkB,mFAKlBC,GAAYG,EAAAA,EAAAA,GAAOC,EAAAA,EAAW,oBAAlBD,CAAmB,uDAK/BP,GAA+B,sGAM/BC,GAAS,uCAETC,GAAU,uCClDhB,MA/CiB5B,IAIH,IAJI,MAChBmC,EAAK,WACL1B,GAAa,EAAK,iBAClB2B,EAAmB,OACb,EACN,MAAMC,GAAqCC,EAAAA,EAAAA,UACzC,IACEH,EAAMjB,QACJqB,IAAAA,IACEC,MACEC,aAAa,WAAExC,KAER,QACY,QAArBmC,GACInC,EAAWyC,SAASN,EAChB,KAEd,CAACA,IAGH,OACEvB,EAAAA,EAAAA,MAACC,EAAS,WACPL,IAAcO,EAAAA,EAAAA,KAACO,EAAK,UAAC,cACtBP,EAAAA,EAAAA,KAAC2B,EAAc,UACZN,EAAmCjB,KAClCwB,IAAAA,IACEJ,MAAM,WACJ9B,EAAU,GACVmC,EACAC,QAAQ,KAAEC,GAAM,YAChBN,IAEH,SACCzB,EAAAA,EAAAA,KAACgC,EAAY,CAEXxC,KAAMuC,KACFN,EACJhC,WAAYA,EACZC,WAAYA,GAJPmC,EAKL,QAIE,EAUhB,MAAM/B,GAAS,uGAMTS,GAAK,sCAELoB,GAAc,sC","sources":["webpack://blog/./src/components/Posts/PostListItem.tsx","webpack://blog/./src/components/Posts/PostList.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { navigate } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Frontmatter } from 'types/Post';\n\nimport CategoryListItem from './CategoryListItem';\n\ntype Props = Frontmatter & {\n  link: string;\n  isFeatured: boolean;\n  timeToRead: number;\n};\n\nconst PostListItem = ({\n  categories,\n  date,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  title,\n  link,\n  isFeatured,\n  timeToRead,\n}: Props) => {\n  const handleClick = () => {\n    navigate(link);\n  };\n\n  return (\n    <Container>\n      <TextInfoContainer>\n        <CategoriesContainer>\n          {categories\n            .filter(category => (isFeatured ? category !== 'Featured' : true))\n            .map(category => (\n              <CategoryListItem key={category} category={category}>\n                {category}\n              </CategoryListItem>\n            ))}\n        </CategoriesContainer>\n        <TitleContainer>\n          <Title onClick={handleClick}>{title}</Title>\n        </TitleContainer>\n        <Description>{summary}</Description>\n        <CreatedAtAndTimeToReadContainer>\n          <CreatedAt>{date}</CreatedAt>\n          <TimeToRead>{timeToRead} min read</TimeToRead>\n        </CreatedAtAndTimeToReadContainer>\n      </TextInfoContainer>\n      <ThumbnailContainer onClick={handleClick}>\n        <Thumbnail image={gatsbyImageData} alt='해당 포스트 썸네일 이미지' />\n      </ThumbnailContainer>\n    </Container>\n  );\n};\n\nexport default PostListItem;\n\nconst Container = styled.div`\n  display: flex;\n  border-radius: 1rem;\n  transition: all 0.1s ease-out;\n\n  &:not(:first-of-type) {\n    margin-top: 3rem;\n  }\n`;\n\nconst TextInfoContainer = styled.div`\n  display: flex;\n  flex: 3;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst CategoriesContainer = styled.div``;\n\nconst TitleContainer = styled.h2``;\n\nconst Title = styled.span`\n  margin-top: 0;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Description = styled.div``;\n\nconst ThumbnailContainer = styled.div`\n  flex: 1;\n  cursor: pointer;\n`;\n\nconst Thumbnail = styled(GatsbyImage)`\n  width: 100%;\n  aspect-ratio: 3 / 2;\n`;\n\nconst CreatedAtAndTimeToReadContainer = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n`;\n\nconst CreatedAt = styled.span``;\n\nconst TimeToRead = styled.span``;\n","import styled from '@emotion/styled';\nimport { useMemo } from 'react';\nimport { PostItem } from 'types/Post';\n\nimport PostListItem from './PostListItem';\n\ntype Props = {\n  posts: PostItem[];\n  isFeatured?: boolean;\n  selectedCategory?: string;\n};\n\nconst PostList = ({\n  posts,\n  isFeatured = false,\n  selectedCategory = 'All',\n}: Props) => {\n  const postListFilteredBySelectedCategory = useMemo(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostItem) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  );\n\n  return (\n    <Container>\n      {isFeatured && <Title>Featured</Title>}\n      <PostsContainer>\n        {postListFilteredBySelectedCategory.map(\n          ({\n            node: {\n              timeToRead,\n              id,\n              fields: { slug },\n              frontmatter,\n            },\n          }) => (\n            <PostListItem\n              key={id}\n              link={slug}\n              {...frontmatter}\n              isFeatured={isFeatured}\n              timeToRead={timeToRead}\n            />\n          ),\n        )}\n      </PostsContainer>\n    </Container>\n  );\n};\n\nexport default PostList;\n\n/**\n * To Do\n * media, 반응형 디자인 작성\n */\nconst Container = styled.div`\n  width: 100%;\n  max-width: 900px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1``;\n\nconst PostsContainer = styled.div``;\n"],"names":["_ref","categories","date","summary","thumbnail","childImageSharp","gatsbyImageData","title","link","isFeatured","timeToRead","handleClick","navigate","_jsxs","Container","TextInfoContainer","_jsx","CategoriesContainer","filter","category","map","CategoryListItem","TitleContainer","Title","onClick","Description","CreatedAtAndTimeToReadContainer","CreatedAt","TimeToRead","ThumbnailContainer","Thumbnail","image","alt","_styled","GatsbyImage","posts","selectedCategory","postListFilteredBySelectedCategory","useMemo","_ref2","node","frontmatter","includes","PostsContainer","_ref3","id","fields","slug","PostListItem"],"sourceRoot":""}