{"version":3,"file":"24527fd91f09a965b3de7675dd3d25f3404ee39d-e516778ec77b01bd47bb.js","mappings":"yNA+DA,MA/CqBA,IAYP,IAZQ,WACpBC,EAAU,KACVC,EAAI,QACJC,EACAC,WACEC,iBAAiB,gBAAEC,IACpB,MACDC,EAAK,KACLC,EAAI,WACJC,EAAU,WACVC,EAAU,MACVC,GACM,EACN,MAAMC,EAAc,MAClBC,EAAAA,EAAAA,IAASL,EAAK,EAGhB,OACEM,EAAAA,EAAAA,MAACC,EAAS,YACRD,EAAAA,EAAAA,MAACE,EAAiB,YAChBC,EAAAA,EAAAA,KAACC,EAAmB,UACjBjB,EACEkB,QAAOC,IAAaX,GAA0B,aAAbW,IACjCC,KAAID,IACHH,EAAAA,EAAAA,KAACK,EAAAA,EAAgB,CAAgBF,SAAUA,GAApBA,QAG7BH,EAAAA,EAAAA,KAACM,EAAK,CAACC,QAASZ,EAAY,SAAEL,KAC9BU,EAAAA,EAAAA,KAACQ,EAAW,UAAEtB,KACdW,EAAAA,EAAAA,MAACY,EAA+B,YAC9BT,EAAAA,EAAAA,KAACU,EAAS,UAAEzB,KACZY,EAAAA,EAAAA,MAACc,EAAU,WAAC,MAAGC,EAAAA,EAAAA,GAAwBnB,GAAY,cAGvDO,EAAAA,EAAAA,KAACa,EAAkB,CAACN,QAASZ,EAAY,UACvCK,EAAAA,EAAAA,KAACc,EAAS,CACRC,QAASrB,EAAQ,QAAU,OAC3BsB,MAAO3B,EACP4B,KAAK,OACLC,IAAI,wBACJX,QAASZ,QAGH,EAMhB,MAAMG,GAAS,uHAIcqB,EAAAA,EAAAA,UAAgB,sEAIjBA,EAAAA,EAAAA,UAAgB,MAItCpB,GAAiB,0KAQjBE,GAAmB,sCAEnBK,GAAK,yKAWLE,GAAW,+EAINW,EAAAA,EAAAA,UAAgB,iGAOrBN,GAAkB,yGAMlBC,GAAYM,EAAAA,EAAAA,GAAOC,EAAAA,EAAW,oBAAlBD,CAAmB,qDAK/BX,GAA+B,qGAK1BU,EAAAA,EAAAA,UAAgB,KAGrBT,GAAS,gGAKTC,GAAU,gGCzDhB,MA5DiB5B,IAIH,IAJI,MAChBuC,EAAK,WACL9B,GAAa,EAAK,iBAClB+B,EAAmB,OACb,EACN,MAAMC,EAAqCF,EAAMpB,QAC/CuB,IAAAA,IACEC,MACEC,aAAa,WAAE3C,KAER,QACY,QAArBuC,GAA6BvC,EAAW4C,SAASL,EAAwB,IAW7E,OACE1B,EAAAA,EAAAA,MAACC,EAAS,WACPN,IACCK,EAAAA,EAAAA,MAACgC,EAAuB,YACtB7B,EAAAA,EAAAA,KAACM,EAAK,UAAC,cACPN,EAAAA,EAAAA,KAAC8B,EAAU,CAACC,GAAIC,EAAAA,EAAAA,MAAczB,QAbH,KC9BXxB,KAQnB,IARoB,OACzBkD,EAAM,SACN9B,EAAQ,MACR+B,GAKD,EAEuB,oBAAXC,QAGXC,KAAK,QAASH,EAAQ,CACpBI,eAAgBlC,EAChBmC,YAAaJ,GACb,EDeAK,CAAW,CACTN,OAAQ,QACR9B,SAAU,OACV+B,MAAO,aACP,EAQsE,SAAC,kBAKvElC,EAAAA,EAAAA,KAACwC,EAAiB,UACfhB,EAAmCpB,KAClC,CAAC,EASCqC,KAAK,IAPHf,MAAM,WACJjC,EAAU,GACViD,EACAC,QAAQ,KAAEC,GAAM,YAChBjB,IAEH,SAGD3B,EAAAA,EAAAA,KAAC6C,EAAY,CACXnD,OAhDGoD,EAgDYL,EAhDMK,EAAQ,GAkD7BvD,KAAMqD,KACFjB,EACJnC,WAAYA,EACZC,WAAYA,GAJPiD,GAjDFI,KAsDH,QAIE,EAUhB,MAAMhD,GAAS,uCAETQ,GAAK,sCAELkC,GAAiB,uCAEjBX,GAAuB,2HAMvBC,GAAaV,EAAAA,EAAAA,GAAO2B,EAAAA,GAAI,qBAAX3B,CAAY,+F","sources":["webpack://blog/./src/components/Posts/PostListItem.tsx","webpack://blog/./src/components/Posts/PostList.tsx","webpack://blog/./src/utils/gtag.ts"],"sourcesContent":["import styled from '@emotion/styled';\nimport { navigate } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Frontmatter } from 'types/Post';\nimport COLORS from 'utils/constants/colors';\nimport { adjustTimeToReadByRatio } from 'utils/timeToRead';\n\nimport CategoryListItem from './CategoryListItem';\n\ntype Props = Frontmatter & {\n  link: string;\n  isFeatured: boolean;\n  timeToRead: number;\n  eager: boolean;\n};\n\nconst PostListItem = ({\n  categories,\n  date,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  title,\n  link,\n  isFeatured,\n  timeToRead,\n  eager,\n}: Props) => {\n  const handleClick = () => {\n    navigate(link);\n  };\n\n  return (\n    <Container>\n      <TextInfoContainer>\n        <CategoriesContainer>\n          {categories\n            .filter(category => (isFeatured ? category !== 'Featured' : true))\n            .map(category => (\n              <CategoryListItem key={category} category={category} />\n            ))}\n        </CategoriesContainer>\n        <Title onClick={handleClick}>{title}</Title>\n        <Description>{summary}</Description>\n        <CreatedAtAndTimeToReadContainer>\n          <CreatedAt>{date}</CreatedAt>\n          <TimeToRead>약 {adjustTimeToReadByRatio(timeToRead)}분</TimeToRead>\n        </CreatedAtAndTimeToReadContainer>\n      </TextInfoContainer>\n      <ThumbnailContainer onClick={handleClick}>\n        <Thumbnail\n          loading={eager ? 'eager' : 'lazy'}\n          image={gatsbyImageData}\n          role='link'\n          alt='썸네일 이미지, 누르면 해당 글로 이동'\n          onClick={handleClick}\n        />\n      </ThumbnailContainer>\n    </Container>\n  );\n};\n\nexport default PostListItem;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 2rem 0;\n  border-bottom: 1px solid ${COLORS.GRAY_BOLD};\n  transition: all 0.1s ease-out;\n\n  &:first-of-type {\n    border-top: 1px solid ${COLORS.GRAY_BOLD};\n  }\n`;\n\nconst TextInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: calc(100% - 200px);\n  padding-right: 1rem;\n`;\n\nconst CategoriesContainer = styled.div``;\n\nconst Title = styled.h3`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Description = styled.div`\n  /* stylelint-disable-next-line value-no-vendor-prefix */\n  display: -webkit-box;\n  overflow: hidden;\n  color: ${COLORS.GRAY_BOLD};\n  text-overflow: ellipsis;\n  word-break: keep-all;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nconst ThumbnailContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 200px;\n`;\n\nconst Thumbnail = styled(GatsbyImage)`\n  height: 100%;\n  cursor: pointer;\n`;\n\nconst CreatedAtAndTimeToReadContainer = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  padding-top: 1rem;\n  color: ${COLORS.GRAY_BOLD};\n`;\n\nconst CreatedAt = styled.span`\n  font-size: 14px;\n  white-space: nowrap;\n`;\n\nconst TimeToRead = styled.span`\n  font-size: 14px;\n  white-space: nowrap;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { PostItem } from 'types/Post';\nimport { ROUTES } from 'utils/constants/routes';\nimport { trackEvent } from 'utils/gtag';\n\nimport PostListItem from './PostListItem';\n\ntype Props = {\n  posts: PostItem[];\n  isFeatured?: boolean;\n  selectedCategory?: string;\n};\n\nconst isEager = (order: number) => order < 3;\n\nconst PostList = ({\n  posts,\n  isFeatured = false,\n  selectedCategory = 'All',\n}: Props) => {\n  const postListFilteredBySelectedCategory = posts.filter(\n    ({\n      node: {\n        frontmatter: { categories },\n      },\n    }: PostItem) =>\n      selectedCategory !== 'All' ? categories.includes(selectedCategory) : true,\n  );\n\n  const handleClickLinkToPostsPage = () => {\n    trackEvent({\n      action: 'click',\n      category: 'link',\n      label: '다른 글 구경하기',\n    });\n  };\n\n  return (\n    <Container>\n      {isFeatured && (\n        <PostListHeaderContainer>\n          <Title>Featured</Title>\n          <StyledLink to={ROUTES.POSTS} onClick={handleClickLinkToPostsPage}>\n            다른 글 구경하기\n          </StyledLink>\n        </PostListHeaderContainer>\n      )}\n      <PostListContainer>\n        {postListFilteredBySelectedCategory.map(\n          (\n            {\n              node: {\n                timeToRead,\n                id,\n                fields: { slug },\n                frontmatter,\n              },\n            },\n            index,\n          ) => (\n            <PostListItem\n              eager={isEager(index)}\n              key={id}\n              link={slug}\n              {...frontmatter}\n              isFeatured={isFeatured}\n              timeToRead={timeToRead}\n            />\n          ),\n        )}\n      </PostListContainer>\n    </Container>\n  );\n};\n\nexport default PostList;\n\n/**\n * To Do\n * media, 반응형 디자인 작성\n */\nconst Container = styled.div``;\n\nconst Title = styled.h2``;\n\nconst PostListContainer = styled.div``;\n\nconst PostListHeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledLink = styled(Link)`\n  padding: 0.5rem;\n  border-radius: 4px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","export const trackEvent = ({\n  action,\n  category,\n  label,\n}: {\n  action: 'click';\n  category: 'link';\n  label: '다른 글 구경하기';\n}) => {\n  // gtag는 개발 환경에서 활성화되지 않는다.\n  if (typeof window === 'undefined' || process.env.NODE_ENV === 'development')\n    return;\n\n  gtag('event', action, {\n    event_category: category,\n    event_label: label,\n  });\n};\n"],"names":["_ref","categories","date","summary","thumbnail","childImageSharp","gatsbyImageData","title","link","isFeatured","timeToRead","eager","handleClick","navigate","_jsxs","Container","TextInfoContainer","_jsx","CategoriesContainer","filter","category","map","CategoryListItem","Title","onClick","Description","CreatedAtAndTimeToReadContainer","CreatedAt","TimeToRead","adjustTimeToReadByRatio","ThumbnailContainer","Thumbnail","loading","image","role","alt","COLORS","_styled","GatsbyImage","posts","selectedCategory","postListFilteredBySelectedCategory","_ref2","node","frontmatter","includes","PostListHeaderContainer","StyledLink","to","ROUTES","action","label","window","gtag","event_category","event_label","trackEvent","PostListContainer","index","id","fields","slug","PostListItem","order","Link"],"sourceRoot":""}