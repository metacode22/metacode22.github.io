{"version":3,"file":"24527fd91f09a965b3de7675dd3d25f3404ee39d-8e3cdba21ab23f64a315.js","mappings":"2MA2DA,MA7CqBA,IAWP,IAXQ,WACpBC,EAAU,KACVC,EAAI,QACJC,EACAC,WACEC,iBAAiB,gBAAEC,IACpB,MACDC,EAAK,KACLC,EAAI,WACJC,EAAU,WACVC,GACM,EACN,MAAMC,EAAc,MAClBC,EAAAA,EAAAA,IAASJ,EAAK,EAGhB,OACEK,EAAAA,EAAAA,MAACC,EAAS,YACRD,EAAAA,EAAAA,MAACE,EAAiB,YAChBC,EAAAA,EAAAA,KAACC,EAAmB,UACjBhB,EACEiB,QAAOC,IAAaV,GAA0B,aAAbU,IACjCC,KAAID,IACHH,EAAAA,EAAAA,KAACK,EAAAA,EAAgB,CAAgBF,SAAUA,GAApBA,QAG7BH,EAAAA,EAAAA,KAACM,EAAK,CAACC,QAASZ,EAAY,SAAEJ,KAC9BS,EAAAA,EAAAA,KAACQ,EAAW,UAAErB,KACdU,EAAAA,EAAAA,MAACY,EAA+B,YAC9BT,EAAAA,EAAAA,KAACU,EAAS,UAAExB,KACZW,EAAAA,EAAAA,MAACc,EAAU,WAAC,KAAGjB,EAAW,cAG9BM,EAAAA,EAAAA,KAACY,EAAkB,CAACL,QAASZ,EAAY,UACvCK,EAAAA,EAAAA,KAACa,EAAS,CACRC,MAAOxB,EACPyB,KAAK,OACLC,IAAI,wBACJT,QAASZ,QAGH,EAMhB,MAAMG,GAAS,uHAIcmB,EAAAA,EAAAA,UAAgB,sEAIjBA,EAAAA,EAAAA,UAAgB,MAItClB,GAAiB,0KAQjBE,GAAmB,sCAEnBK,GAAK,yKAWLE,GAAW,+EAINS,EAAAA,EAAAA,UAAgB,iGAOrBL,GAAkB,yGAMlBC,GAAYK,EAAAA,EAAAA,GAAOC,EAAAA,EAAW,oBAAlBD,CAAmB,qDAK/BT,GAA+B,qGAK1BQ,EAAAA,EAAAA,UAAgB,KAGrBP,GAAS,gGAKTC,GAAU,gGCtEhB,MA9CiB3B,IAIH,IAJI,MAChBoC,EAAK,WACL3B,GAAa,EAAK,iBAClB4B,EAAmB,OACb,EACN,MAAMC,EAAqCF,EAAMlB,QAC/CqB,IAAAA,IACEC,MACEC,aAAa,WAAExC,KAER,QACY,QAArBoC,GAA6BpC,EAAWyC,SAASL,EAAwB,IAG7E,OACExB,EAAAA,EAAAA,MAACC,EAAS,WACPL,IACCI,EAAAA,EAAAA,MAAC8B,EAAuB,YACtB3B,EAAAA,EAAAA,KAACM,EAAK,UAAC,cACPN,EAAAA,EAAAA,KAAC4B,EAAU,CAACC,GAAIC,EAAAA,EAAAA,MAAa,SAAC,kBAGlC9B,EAAAA,EAAAA,KAAC+B,EAAiB,UACfT,EAAmClB,KAClC4B,IAAAA,IACER,MAAM,WACJ9B,EAAU,GACVuC,EACAC,QAAQ,KAAEC,GAAM,YAChBV,IAEH,SACCzB,EAAAA,EAAAA,KAACoC,EAAY,CAEX5C,KAAM2C,KACFV,EACJhC,WAAYA,EACZC,WAAYA,GAJPuC,EAKL,QAIE,EAUhB,MAAMnC,GAAS,uCAETQ,GAAK,sCAELyB,GAAiB,uCAEjBJ,GAAuB,2HAMvBC,GAAaV,EAAAA,EAAAA,GAAOmB,EAAAA,GAAI,qBAAXnB,CAAY,+F","sources":["webpack://blog/./src/components/Posts/PostListItem.tsx","webpack://blog/./src/components/Posts/PostList.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { navigate } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Frontmatter } from 'types/Post';\nimport COLORS from 'utils/constants/colors';\n\nimport CategoryListItem from './CategoryListItem';\n\ntype Props = Frontmatter & {\n  link: string;\n  isFeatured: boolean;\n  timeToRead: number;\n};\n\nconst PostListItem = ({\n  categories,\n  date,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  title,\n  link,\n  isFeatured,\n  timeToRead,\n}: Props) => {\n  const handleClick = () => {\n    navigate(link);\n  };\n\n  return (\n    <Container>\n      <TextInfoContainer>\n        <CategoriesContainer>\n          {categories\n            .filter(category => (isFeatured ? category !== 'Featured' : true))\n            .map(category => (\n              <CategoryListItem key={category} category={category} />\n            ))}\n        </CategoriesContainer>\n        <Title onClick={handleClick}>{title}</Title>\n        <Description>{summary}</Description>\n        <CreatedAtAndTimeToReadContainer>\n          <CreatedAt>{date}</CreatedAt>\n          <TimeToRead>약 {timeToRead}분</TimeToRead>\n        </CreatedAtAndTimeToReadContainer>\n      </TextInfoContainer>\n      <ThumbnailContainer onClick={handleClick}>\n        <Thumbnail\n          image={gatsbyImageData}\n          role='link'\n          alt='썸네일 이미지, 누르면 해당 글로 이동'\n          onClick={handleClick}\n        />\n      </ThumbnailContainer>\n    </Container>\n  );\n};\n\nexport default PostListItem;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 2rem 0;\n  border-bottom: 1px solid ${COLORS.GRAY_BOLD};\n  transition: all 0.1s ease-out;\n\n  &:first-of-type {\n    border-top: 1px solid ${COLORS.GRAY_BOLD};\n  }\n`;\n\nconst TextInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: calc(100% - 200px);\n  padding-right: 1rem;\n`;\n\nconst CategoriesContainer = styled.div``;\n\nconst Title = styled.h3`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Description = styled.div`\n  /* stylelint-disable-next-line value-no-vendor-prefix */\n  display: -webkit-box;\n  overflow: hidden;\n  color: ${COLORS.GRAY_BOLD};\n  text-overflow: ellipsis;\n  word-break: keep-all;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nconst ThumbnailContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 200px;\n`;\n\nconst Thumbnail = styled(GatsbyImage)`\n  height: 100%;\n  cursor: pointer;\n`;\n\nconst CreatedAtAndTimeToReadContainer = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  padding-top: 1rem;\n  color: ${COLORS.GRAY_BOLD};\n`;\n\nconst CreatedAt = styled.span`\n  font-size: 14px;\n  white-space: nowrap;\n`;\n\nconst TimeToRead = styled.span`\n  font-size: 14px;\n  white-space: nowrap;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { PostItem } from 'types/Post';\nimport { ROUTES } from 'utils/constants/routes';\n\nimport PostListItem from './PostListItem';\n\ntype Props = {\n  posts: PostItem[];\n  isFeatured?: boolean;\n  selectedCategory?: string;\n};\n\nconst PostList = ({\n  posts,\n  isFeatured = false,\n  selectedCategory = 'All',\n}: Props) => {\n  const postListFilteredBySelectedCategory = posts.filter(\n    ({\n      node: {\n        frontmatter: { categories },\n      },\n    }: PostItem) =>\n      selectedCategory !== 'All' ? categories.includes(selectedCategory) : true,\n  );\n\n  return (\n    <Container>\n      {isFeatured && (\n        <PostListHeaderContainer>\n          <Title>Featured</Title>\n          <StyledLink to={ROUTES.POSTS}>다른 글 구경하기</StyledLink>\n        </PostListHeaderContainer>\n      )}\n      <PostListContainer>\n        {postListFilteredBySelectedCategory.map(\n          ({\n            node: {\n              timeToRead,\n              id,\n              fields: { slug },\n              frontmatter,\n            },\n          }) => (\n            <PostListItem\n              key={id}\n              link={slug}\n              {...frontmatter}\n              isFeatured={isFeatured}\n              timeToRead={timeToRead}\n            />\n          ),\n        )}\n      </PostListContainer>\n    </Container>\n  );\n};\n\nexport default PostList;\n\n/**\n * To Do\n * media, 반응형 디자인 작성\n */\nconst Container = styled.div``;\n\nconst Title = styled.h2``;\n\nconst PostListContainer = styled.div``;\n\nconst PostListHeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledLink = styled(Link)`\n  padding: 0.5rem;\n  border-radius: 4px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n"],"names":["_ref","categories","date","summary","thumbnail","childImageSharp","gatsbyImageData","title","link","isFeatured","timeToRead","handleClick","navigate","_jsxs","Container","TextInfoContainer","_jsx","CategoriesContainer","filter","category","map","CategoryListItem","Title","onClick","Description","CreatedAtAndTimeToReadContainer","CreatedAt","TimeToRead","ThumbnailContainer","Thumbnail","image","role","alt","COLORS","_styled","GatsbyImage","posts","selectedCategory","postListFilteredBySelectedCategory","_ref2","node","frontmatter","includes","PostListHeaderContainer","StyledLink","to","ROUTES","PostListContainer","_ref3","id","fields","slug","PostListItem","Link"],"sourceRoot":""}